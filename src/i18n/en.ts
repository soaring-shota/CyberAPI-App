export default {
  collection: {
    filterPlaceholder: "filter keywords",
    newHTTPRequest: "Create a new HTTP request",
    newFolder: "Create a new folder",
    deleteSetting: "Delete configurations",
    deleteSettingContent: "Please confirm the deletion of configurations(%s)",
    modifySetting: "Modify configurations",
    copySetting: "Duplicate configurations",
    copySettingSuccess:
      "Configurations have been copied to clipboard successfully",
    shouldSelectAPISettingFirst: "Please select API request first",
    send: "Send",
    abort: "Abort",
    format: "Format",
    changeContentType: "Change data type",
    changeContentTypeContent:
      "The original data will be cleared after changing the data type, so please confirm the change",
    namePlaceholder: "name",
    valuePlaceholder: "value",
    requesting: "Requesting...",
    copyAsCURL: "Copy as curl",
    copyAsCURLSuccess: "CURL has been copied to the clipboard successfully",
    pinRequest: "Pin request",
    importSettings: "Import configurations",
    importPostman: "Import configurations of postman",
    importing: "Importing configurations, please wait...",
    importInsomnia: "Import configurations of insomnia",
    importSuccess: "Imported configurations successfully",
    exportSettings: "Export configurations",
    exportSettingsSuccess:
      "The configurations are successfully exported to the download directory",
    curlTooLargeTips:
      "CURL data is too large, and the content has been copied to the clipboard",
    apiID: "Request ID",
  },
  common: {
    app: "CyberAPI",
    dashboard: "Dashboard",
    add: "Add",
    confirm: "Confirm",
    back: "Return",

    name: "name",
    nameRequireError: "name can not be blank",
    namePlaceholder: "please enter a name",

    description: "description",
    descriptionPlaceholder: "please enter description",

    modify: "modify",

    loading: "loading",
    delete: "delete",
    duplicate: "duplicate",
    settings: "configurations",
    create: "Create",
    keywordFilterPlaceholder: "please enter a keyword",
  },
  dashboard: {
    newCollection: "Create API group",
    updateCollection: "Update API group",
    deleteCollection: "Delete API group",
    deleteCollectionContent:
      "Please confirm the deletion of API group, which can not be recovered after deletion!",
    deleteCollectionDone: "The API group was successfully deleted",
    sortLastModified: "Modify Time",
    sortNameAsc: "Name Asc",
    sortNameDesc: "Name Desc",
    sortOlderFirst: "Older First",
    sortNewestFirst: "Newest First",
  },
  setting: {
    title: "Application Setting",
    themeTitle: "Please select the color theme of application",
    darkTheme: "Dark Theme",
    lightTheme: "Light Theme",
    systemTheme: "System Theme",
    infoTitle: "Application Information",
    appVersion: "Version",
    platform: "Platform",
    arch: "Framework",
    os: "OS",
    dir: "Directory",
    osVersion: "OS version",
    windowSize: "Application Window",
    windowWidth: "Width",
    windowResizeType: "Size type of application window",
    windowMaxSize: "Maximize",
    windowCustomSize: "Customize",
    windowWidthPlaceholder: "please enter window width",
    windowHeight: "Height",
    windowHeightPlaceholder: "please enter window height",
    cookieSetting: "Cookie",
    storeSetting: "Storage",
    appSetting: "Setting",
    envSetting: "ENV",
    langChangeSuccess:
      "language configuration is modified successfully, and the application will restart in 3 seconds",
  },
  cookie: {
    title: "Cookie",
    name: "Name",
    namePlaceholder: "please enter the name of cookie",
    value: "Value",
    valuePlaceholder: "please enter the value of cookie",
    path: "Path",
    pathPlaceholder: "please enter the path of cookie",
    domain: "Domain",
    domainPlaceholder: "please enter the domain of cookie",
    expires: "Expiry Date",
    expiresPlaceholder: "please enter the expiry date of cookie",
    op: "Operation",
    deleteCookie: "delete cookie",
    deleteCookieContent: "please confirm the deletion of cookie",
  },
  environment: {
    title: "Environment",
    tips: "Use current environment to facilitate switching between different environments",
    uriIsNil: "request address can not be blank",
    addNew: "add environmental variable",
    clearCurrent: "clear current value",
  },
  store: {
    title: "Storage",
    name: "Storage",
    desc: "Description",
    op: "Operation",
    settingStore: "Setting",
    settingStoreDesc:
      "save configurations such as application window, theme and etc.",
    pinRequestsStore: "Pin",
    pinRequestsStoreDesc: "save the relevant request information for topping",
    latestResponseStore: "LatestRequest",
    latestResponseStoreDesc: "save the latest request response",
    clearTips:
      "please confirm the clearing (%s) of all data, which can not be recovered after clearing",
    clearSuccess:
      "the stored data has been cleared, and the application will restart in 3 seconds",
  },
};
